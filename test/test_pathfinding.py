# Test pathfinding.py

import pytest
import os
import sys

this_dir = os.path.dirname(__file__)
local_src_dir = os.path.join(this_dir, '..', 'src')
sys.path.append(local_src_dir)
import pathfinding


def test_aStar():
    graph = [
        [[8, 1]], [[0, 1], [9, 1]], [[1, 1], [10, 1]], [[2, 1], [4, 1], [11, 1]], [[3, 1], [5, 1]], [[4, 1], [6, 1]], [[5, 1], [7, 1]], [[6, 1], [15, 1]],
        [[0, 1], [9, 1], [16, 1]], [[1, 1], [8, 1], [17, 1]], [[2, 1], [9, 1], [18, 1]], [[3, 1], [10, 1], [19, 1]], [[4, 1], [11, 1], [13, 1], [20, 1]], [[5, 1], [12, 1], [14, 1]], [[6, 1], [13, 1], [15, 1], [22, 1]], [[7, 1], [23, 1]],
        [[8, 1], [24, 1]], [[9, 1], [16, 1], [18, 1]], [[10, 1], [17, 1], [26, 1]], [[11, 1], [18, 1], [27, 1]], [[12, 1], [19, 1], [21, 1], [28, 1]], [[13, 1], [20, 1], [22, 1], [29, 1]], [[14, 1], [23, 1], [30, 1]], [[15, 1], [31, 1]],
        [[16, 1], [32, 1]], [[17, 1], [24, 1], [26, 1], [33, 1]], [[18, 1], [34, 1]], [[19, 1], [26, 1], [28, 1], [35, 1]], [[27, 1], [29, 1], [36, 1]], [[28, 1], [30, 1], [37, 1]], [[22, 1], [29, 1], [31, 1], [38, 1]], [[23, 1], [39, 1]],
        [[24, 1], [33, 1]], [[32, 1]], [[26, 1], [33, 1], [35, 1]], [[34, 1], [36, 1]], [[35, 1], [37, 1]], [[36, 1], [38, 1]], [[37, 1], [39, 1]], [[31, 1], [38, 1]]
    ]
    expected = [0, 8, 9, 17, 18, 26, 34, 35, 36, 37, 38, 39, 31, 23, 15, 7, 6, 5, 4, 3, 11, 19, 27, 28, 29, 30, 22, 14, 13, 12, 20, 21]

    WIDTH = 8
    HEIGHT = 5
    START = 0
    END = 21
    IMPASSABLE = 2 * WIDTH * HEIGHT + 1

    def h(s):
        sx = s % WIDTH
        sy = s // WIDTH
        ex = END % WIDTH
        ey = END // WIDTH
        return abs(ex - sx) + abs(ey - sy)

    def neighborsOf(s):
        return graph[s]

    result = pathfinding.aStar(graph, START, END, h, neighborsOf, IMPASSABLE)
    assert(result == expected)
